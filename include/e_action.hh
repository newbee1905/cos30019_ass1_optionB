#ifndef ENUM_ACTION_HH
#define ENUM_ACTION_HH

#include "enums.hh"
#include "grid.hh"

ENUM_STR(Action, LEFT, RIGHT, UP, DOWN, NO_OP);

// Right and Down directions are bias
// Since we most likely start from the left side
// and the goals are most likely on the right side
//
// This bias is non-logical but what the test cases
// most likely are if generated by human
constexpr Cell CellFromDirection(Action a) {
  switch (a) {
  case LEFT:
    return Cell{0, -1};
  case UP:
    return Cell{-1, 0};
  case DOWN:
    return Cell{1, 0};
  case RIGHT:
    return Cell{0, 1};
  default:
    return Cell{0, 0};
  }
}

constexpr std::array<kd::pair<Cell, Action>, 4> CellAdjs = {
    kd::pair<Cell, Action>{Cell{0, -1}, Action::LEFT},
    kd::pair<Cell, Action>{Cell{-1, 0}, Action::UP},
    kd::pair<Cell, Action>{Cell{1, 0}, Action::DOWN},
    kd::pair<Cell, Action>{Cell{0, 1}, Action::RIGHT},
};

#endif // !ENUM_ACTION_HH
